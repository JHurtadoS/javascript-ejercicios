---
type Props = {};

const {} = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Ejercicio 2</title>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap"
            rel="stylesheet"
        />
    </head>
    <body
        class="w-full h-screen flex justify-center items-center flex-col overflow-x-hidden"
    >
        <form id="temperatureForm" class="bg-red-600 rounded-lg p-5 w-4/12">
            <div class="divContainer">
                <label for="temperature"
                    >Ingrese una temperatura en grados:</label
                >
                <input
                    type="number"
                    id="temperature"
                    name="temperature"
                    required
                />
            </div>

            <div class="divContainer">
                <label for="from">Convertir de:</label>
                <select id="from" name="from">
                    <option value="celsius">Celsius</option>
                    <option value="fahrenheit">Fahrenheit</option>
                    <option value="kelvin">Kelvin</option>
                </select>
            </div>

            <div class="divContainer">
                <label for="to">Deseas convertir a:</label>
                <select id="to" name="to">
                    <option value="celsius">Celsius</option>
                    <option value="fahrenheit">Fahrenheit</option>
                    <option value="kelvin">Kelvin</option>
                </select>
            </div>

            <button id="buttonSave" type="button">Mostrar resultado</button>
        </form>
        <div id="ResultContainer" class="close mt-5">
            <h1 id="result" class="text-3xl font-semibold"></h1>
        </div>
    </body>
</html>

<style>
    body {
        @apply m-5 font-Lato;
    }
    label {
        @apply text-lg font-medium text-white w-52;
    }

    input,
    select {
        padding: 5px 10px;
        width: 200px;
        margin: 20px 0;
        border-radius: 5px;
    }

    .divContainer {
        @apply flex gap-x-3 items-center;
    }

    button {
        @apply bg-orange-400 text-white px-4 py-2  font-semibold mx-auto block;
    }

    #ResultContainer {
        /* display: none; */
        opacity: 0;
    }

    @keyframes opening {
        to {
            display: block;
            opacity: 1;
        }
    }

    #ResultContainer.open {
        animation: opening 0.5s forwards;
    }
</style>

<script>
    const elementTemperature: HTMLInputElement | null =
        document.querySelector("#temperature");
    const Elementfrom: HTMLInputElement | null =
        document.querySelector("#from");
    const ElementTo: HTMLInputElement | null = document.querySelector("#to");

    const resultContainer: Element | null | undefined =
        document.querySelector("#ResultContainer");
    function convertTemperature(
        elementTemperature: HTMLInputElement,
        Elementfrom: HTMLInputElement,
        ElementTo: HTMLInputElement,
        resultContainer: Element,
    ) {
        const temperature = parseFloat(elementTemperature.value);
        const from = Elementfrom.value;
        const to = ElementTo.value;
        const resultText = resultContainer.querySelector("h1");
        resultContainer.classList.add("open");

        if (resultText) {
            switch (from) {
                case "celsius":
                    switch (to) {
                        case "celsius":
                            resultText.textContent = `${temperature} °C es igual a ${temperature} °C.`;
                            break;
                        case "fahrenheit":
                            resultText.textContent = `${temperature} °C es igual a ${(temperature * 9) / 5 + 32} °F.`;
                            break;
                        case "kelvin":
                            resultText.textContent = `${temperature} °C es igual a ${temperature + 273.15} K.`;
                            break;
                    }
                    break;
                case "fahrenheit":
                    switch (to) {
                        case "celsius":
                            resultText.textContent = `${temperature} °F es igual a ${((temperature - 32) * 5) / 9} °C.`;
                            break;
                        case "fahrenheit":
                            resultText.textContent = `${temperature} °F es igual a ${temperature} °F.`;
                            break;
                        case "kelvin":
                            resultText.textContent = `${temperature} °F es igual a ${((temperature - 32) * 5) / 9 + 273.15} K.`;
                            break;
                    }
                    break;
                case "kelvin":
                    switch (to) {
                        case "celsius":
                            resultText.textContent = `${temperature} K es igual a ${temperature - 273.15} °C.`;
                            break;
                        case "fahrenheit":
                            resultText.textContent = `${temperature} K es igual a ${((temperature - 273.15) * 9) / 5 + 32} °F.`;
                            break;
                        case "kelvin":
                            resultText.textContent = `${temperature} K es igual a ${temperature} K.`;
                            break;
                    }
                    break;
            }
        }
    }

    if (elementTemperature && Elementfrom && ElementTo && resultContainer) {
        const button = document.querySelector("#buttonSave");

        if (button) {
            button.addEventListener("click", (e) => {
                e.preventDefault();
                convertTemperature(
                    elementTemperature,
                    Elementfrom,
                    ElementTo,
                    resultContainer,
                );
            });
        }
    }
</script>
